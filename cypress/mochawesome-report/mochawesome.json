{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2021-11-08T19:04:54.724Z",
    "end": "2021-11-08T19:04:56.975Z",
    "duration": 2251,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "7f130f9d-a61a-4d67-b9e4-82dcfa5ec380",
      "title": "",
      "fullFile": "cypress/integration/features/api/teste_api.feature",
      "file": "cypress/integration/features/api/teste_api.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "29217908-014d-4ec3-9c61-b2930b6df900",
          "title": "Login - validar login com sucesso",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Teste de api simples",
              "fullTitle": "Login - validar login com sucesso Teste de api simples",
              "timedOut": null,
              "duration": 575,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "7cd41f31-55b3-4f50-8329-0e3a86acd0fc",
              "parentUUID": "29217908-014d-4ec3-9c61-b2930b6df900",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Teste de api simples",
              "fullTitle": "Login - validar login com sucesso Teste de api simples",
              "timedOut": null,
              "duration": 314,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "a625c8b2-5508-436f-9c9d-869e843e3096",
              "parentUUID": "29217908-014d-4ec3-9c61-b2930b6df900",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "teste api get reqres",
              "fullTitle": "Login - validar login com sucesso teste api get reqres",
              "timedOut": null,
              "duration": 691,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "f1d53615-f805-455b-bbb9-2b5edda110ff",
              "parentUUID": "29217908-014d-4ec3-9c61-b2930b6df900",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "teste api post reqres",
              "fullTitle": "Login - validar login com sucesso teste api post reqres",
              "timedOut": null,
              "duration": 625,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "807b6ce8-8ed5-4607-851c-66f2cd62212b",
              "parentUUID": "29217908-014d-4ec3-9c61-b2930b6df900",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7cd41f31-55b3-4f50-8329-0e3a86acd0fc",
            "a625c8b2-5508-436f-9c9d-869e843e3096",
            "f1d53615-f805-455b-bbb9-2b5edda110ff",
            "807b6ce8-8ed5-4607-851c-66f2cd62212b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2205,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "5.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "overwrite": "false",
        "reportPageTitle": "Automated Test Status",
        "reportTitle": "Automated Test Reporting Dashboard",
        "showPassed": "true",
        "autoOpen": "false",
        "charts": "true",
        "code": "false"
      },
      "version": "4.1.0"
    }
  }
}